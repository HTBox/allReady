@model AllReady.ViewModels.ActivityViewModel
@using System.Security.Claims

@{
    ViewBag.Title = $"{Model.Title}";

}

<div class="row">
    <div class="col-sm-5">
        <div class="row">
            @if (!String.IsNullOrEmpty(Model.ImageUrl))
            {
                <div class="col-sm-2">
                    <h2></h2>
                    <img src="@Model.ImageUrl" class="img-responsive" />
                </div>
            }
            <div class="@(string.IsNullOrEmpty(Model.ImageUrl) ? "col-sm-12" : "col-sm-10" )">
                <h2>@Model.Title</h2>
                <p class="date-address">@Model.StartDateTime.ToString("F") - @Model.EndDateTime.ToString("F")</p>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <p>@Model.Description</p>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <h3>Campaign</h3>
                <p><a href="@Url.Action("Details","Campaign", new { id = Model.CampaignId })">@Model.CampaignName</a></p>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <h3>Campaign Organizer</h3>
                <h4><a asp-controller="Tenant" asp-action="ShowTenant" asp-route-id="@Model.TenantId">@Model.TenantName</a></h4>
            </div>
        </div>

        @if (Model.IsUserVolunteeredForActivity && Model.Tasks.Any())
        {
            <div class="row">
                <div class="col-sm-12">
                    <h3>My Assigned Tasks</h3>
                </div>
                <div class="col-sm-12">
                    <div class="form-inline">
                        <div class="form-group">
                            <input type="text" class="form-control input-sm" data-bind="textInput: tasks.searchTerm" placeholder="Search tasks" />
                        </div>
                        <div class="form-group">
                            <button type="button" class="btn btn-default btn-sm" data-bind="css: { active: tasks.showOld }, click: tasks.showOld.toggle">
                                <i class="fa" data-bind="css: { 'fa-square-o': !tasks.showOld(), 'fa-check-square-o': tasks.showOld }"></i>
                                Show Closed Tasks
                            </button>
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <span class="label-warning label hide" data-bind="css: { hide: tasks.filtered().length }">No matching tasks.</span>
                    <ul data-bind="foreach: tasks.filtered">
                        <li>
                            <strong data-bind="text: Name"></strong>
                            <span class="fa fa-question-circle" data-bind="visible: Description, tooltip: { title: Description, placement: 'top' }" aria-hidden="true"></span>
                            <span class="label label-info" data-bind="visible: AssignedVolunteers[0].Status === 'Assigned', tooltip: { title: 'Assigned' }"><span class="fa fa-arrow-right"></span></span>
                            <span class="label label-primary" data-bind="visible: AssignedVolunteers[0].Status === 'Accepted', tooltip: { title: 'Accepted' }"><span class="fa fa-thumbs-o-up"></span></span>
                            <span class="label label-warning" data-bind="visible: AssignedVolunteers[0].Status === 'Rejected', tooltip: { title: 'Rejected' }"><span class="fa fa-thumbs-o-down"></span></span>
                            <span class="label label-success" data-bind="visible: AssignedVolunteers[0].Status === 'Completed', tooltip: { title: 'Completed' }"><span class="fa fa-check"></span></span>
                            <span class="label label-danger" data-bind="visible: AssignedVolunteers[0].Status === 'CanNotComplete', tooltip: { title: 'Unable to complete (' + AssignedVolunteers[0].StatusDescription + ')' }"><span class="fa fa-times"></span></span>
                            <a class="btn btn-link" data-bind="visible: AssignedVolunteers[0].Status === 'Assigned', attr: { href: '/Activity/ChangeStatus?status=Accepted&activityId=' + ActivityId + '&taskId=' + Id + '&userId=' + AssignedVolunteers[0].UserId }">Accept</a>
                            <a class="btn btn-link" data-bind="visible: AssignedVolunteers[0].Status === 'Assigned', attr: { href: '/Activity/ChangeStatus?status=Rejected&activityId=' + ActivityId + '&taskId=' + Id + '&userId=' + AssignedVolunteers[0].UserId }">Reject</a>
                            <a class="btn btn-link" data-bind="visible: AssignedVolunteers[0].Status === 'Accepted', attr: { href: '/Activity/ChangeStatus?status=Completed&activityId=' + ActivityId + '&taskId=' + Id + '&userId=' + AssignedVolunteers[0].UserId }">Complete</a>
                            <a class="btn btn-link" href="#" data-bind="visible: AssignedVolunteers[0].Status === 'Accepted', attr: { 'data-target': '#cantCompleteReason' + Id }" data-toggle="modal">Unable to Complete</a>
                            <div class="modal fade" data-bind="if: AssignedVolunteers[0].Status === 'Accepted', attr: { id: 'cantCompleteReason' + Id }" tabindex="-1" role="dialog">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                            <h4 class="modal-title" id="cantCompleteLabel">
                                                Mark <span data-bind="text: Name"></span> as Unable to Complete?
                                            </h4>
                                        </div>
                                        <div class="modal-body">
                                            <div class="form-group">
                                                <label data-bind="attr: { 'for': 'notCompleteReason' + Id }">Reason</label>
                                                <input type="text" class="form-control" data-bind="textInput: NotCompleteReason, attr: { 'id': 'notCompleteReason' + Id }">
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <a class="btn btn-danger" data-bind="attr: { href: '/Activity/ChangeStatus?status=CanNotComplete&activityId=' + ActivityId + '&taskId=' + Id + '&userId=' + AssignedVolunteers[0].UserId + '&statusDesc=' + NotCompleteReason() }">Unable to Complete</a>
                                            <button type="button" data-dismiss="modal" class="btn btn-link">Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        }
    </div>
    <div class="col-sm-3">
        <div class="row">
            <div class="col-sm-12">
                @if (!Model.IsUserVolunteeredForActivity)
                {
                    <h2>
                        @if (!User.IsSignedIn())
                        {
                            <a asp-action="Login" asp-controller="Account" asp-route-ReturnUrl="/Activity/@Model.Id" class="btn btn-volunteer">Volunteer</a>
                        }
                        else
                        {
                            <a href="#" data-toggle="modal" data-target="#volunteerForm" class="btn btn-volunteer">Volunteer</a>
                        }
                    </h2>
                }
                else
                {
                    <div class="volunteered">
                        <center>
                            Thanks for volunteering!
                            <br />
                            <a href="#" class="unvolunteer text-center" data-bind="click: function() {unenroll(@Model.Id);}">Unenroll</a>
                        </center>
                    </div>
                }
            </div>
        </div>
        <div class="row" data-bind="visible: skills.length">
            <div class="col-sm-12">
                <h3>Needed Skills</h3>
                <ul data-bind="foreach: skills">
                    <li>
                        <span data-bind="text: HierarchicalName"></span>
                        <span class="fa fa-question-circle" data-bind="visible: Description, tooltip: { title: Description, placement: 'top' }" aria-hidden="true"></span>
                        <span class="label label-success" data-bind="visible: IsUserSkill, tooltip: { title: 'You have this skill!', placement: 'top' }">
                            <span class="fa fa-check" aria-hidden="true"></span>
                            Match
                        </span>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <div class="col-sm-4">
        <h3>Location</h3>
        <div id="mapArea" style="position:relative;width:300px;height:300px"></div>
        <h3>Address</h3>
        <p>
            @Model.Location?.Address1<br />
            @if (!string.IsNullOrEmpty(Model.Location?.Address2))
            {
                @Model.Location.Address2
            }
            @Model.Location?.City @Model.Location?.State @Model.Location?.PostalCode?.PostalCode
        </p>
    </div>
</div>

<!-- Volunteer Modal -->
@if (User.IsSignedIn())
{
    <div class="modal fade" id="volunteerForm" tabindex="-1" role="dialog" aria-labelledby="volunteerFormLabel">
        @using (Html.BeginForm("Signup", "Activity", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <input asp-for="SignupModel.ActivityId" type="hidden" />
            <input asp-for="SignupModel.UserId" type="hidden" />
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="volunteerFormLabel">Volunteer for @Model.Title</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-horizontal">
                                <input asp-for="SignupModel.Name" type="hidden" />
                                @if (!string.IsNullOrWhiteSpace(Model.SignupModel.Name))
                                {
                                    <div class="form-group">
                                        <label asp-for="SignupModel.Name" class="control-label col-md-4"></label>
                                        <div class="col-md-8">
                                            <p class="form-control-static">
                                                @Model.SignupModel.Name
                                            </p>
                                        </div>
                                    </div>
                                }
                                <div class="form-group">
                                    <label asp-for="SignupModel.PreferredEmail" class="control-label col-md-4"></label>
                                    <div class="col-md-8">
                                        <input type="text" asp-for="SignupModel.PreferredEmail" class="form-control" />
                                        <span asp-validation-for="SignupModel.PreferredEmail" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label asp-for="SignupModel.PreferredPhoneNumber" class="control-label col-md-4"></label>
                                    <div class="col-md-8">
                                        <input type="text" asp-for="SignupModel.PreferredPhoneNumber" class="form-control" />
                                        <span asp-validation-for="SignupModel.PreferredPhoneNumber" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label asp-for="SignupModel.AdditionalInfo" class="control-label col-md-4"></label>
                                    <div class="col-md-8">
                                        <input type="text" asp-for="SignupModel.AdditionalInfo" class="form-control" />
                                        <span asp-validation-for="SignupModel.AdditionalInfo" class="text-danger"></span>
                                    </div>
                                </div>
                                @if (Model.RequiredSkills?.Count > 0)
                                {
                                    <div class="form-group">
                                        <label class="control-label col-md-4">Associate new skills?</label>
                                        <div class="col-md-8">
                                            <ul class="list-unstyled form-control-static">
                                                @foreach (var skill in Model.RequiredSkills)
                                                {
                                                    if (!Model.UserSkills.Any(us => us.Id == skill.Id))
                                                    {
                                                        <li>
                                                            <input type="checkbox" id="@($"skillId{skill.Id}")" name="SignupModel.AddSkillIds" value="@skill.Id" />
                                                            <label for="@($"skillId{skill.Id}")">@skill.HierarchicalName</label>
                                                            @if (!string.IsNullOrWhiteSpace(skill.Description))
                                                            {
                                                                <span class="fa fa-question-circle" data-bind="visible: '@skill.Description', tooltip: { title: '@skill.Description', placement: 'top' }" aria-hidden="true"></span>
                                                            }
                                                        </li>
                                                    }
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Volunteer</button>
                        <button type="button" data-dismiss="modal" class="btn btn-link">Cancel</button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@section scripts {
    <script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>

    <script type="text/javascript">
        var modelStuff = @Json.Serialize(new { tasks = Model.Tasks, skills = Model.RequiredSkills, userSkills = Model.UserSkills });

        System.config({
            baseURL: location.protocol + "//" + location.host + '/ts/'
        });

        System.import('mappingTools.js').then(function (sys) {
            var map = new sys.HTBox.maps.MapRender('mapArea');
            //map.zoomToMyLocation();
            map.drawAddress('@Model.Location?.Address1',
                '@Model.Location?.Address2',
                '@Model.Location?.City',
                '@Model.Location?.State',
                '@Model.Location?.PostalCode?.PostalCode',
                '@Model.Location?.Country');
        });;

        @*$(document).ready(function () {
            getGeoCoordinates('@Model.Location?.Address1',
                '@Model.Location?.Address2',
                '@Model.Location?.City',
                '@Model.Location?.State',
                '@Model.Location?.PostalCode?.PostalCode',
                '@Model.Location?.Country',
                function (result) {
                    var positionCoordsList = [
                    { latitude: result.latitude, longitude: result.longitude }
                    ];
                    $("#bingMap").css("width", "300px").css("height", "300px");
                    renderBingMap('bingMap', positionCoordsList);
                });
        });*@
    </script>
    <script type="text/javascript" src="~/js/activity.js"></script>
}
