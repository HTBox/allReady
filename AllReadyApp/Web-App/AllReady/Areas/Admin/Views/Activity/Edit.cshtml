@model  AllReady.Areas.Admin.Models.ActivityDetailModel
@inject AllReady.Services.ISelectListService SelectListService


@{
    //TODO: Need a better way of identifying Create vs Edit. Suggest not binding directly to model class, create view model instead
    var isEdit = Model.Id != 0;
    string actionTitle;
    string cancelUrl;
    if (isEdit)
    {
        ViewBag.Title = $"Edit Activity";
        actionTitle = "Save";
        cancelUrl = Url.Action("Details", "Activity", new { id = Model.Id, area = "Admin" });
    }
    else
    {
        ViewBag.Title = "Create Activity";
        actionTitle = "Create";
        cancelUrl = Url.Action("Details", "Campaign", new { id = Model.CampaignId, area = "Admin" });
    }
}

<div class="row">
    <div class="col-12">
        <ol class="breadcrumb">
            <li><a asp-controller="Campaign" asp-action="Index" asp-route-area="Admin">Campaigns</a></li>
            <li><a asp-controller="Campaign" asp-action="Details" asp-route-id="@Model.CampaignId" asp-route-area="Admin">@Model.CampaignName</a></li>
            @if (isEdit)
            {
                <li><a asp-controller="Activity" asp-action="Details" asp-route-id="@Model.Id" asp-route-area="Admin">@Model.Name</a></li>
                <li>Edit</li>
            }
            else
            {
                <li>Create New Activity</li>
            }
            
        </ol>
    </div>
</div>

<h2>@ViewBag.Title</h2>

<form asp-controller="Activity" asp-route-area="Admin" method="post" enctype="multipart/form-data">

    <div class="form-horizontal">
        <hr />
        <div class="form-horizontal col-lg-6 pull-left">
            <div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>
            <input asp-for="Id" type="hidden" />
            <input asp-for="CampaignId" type="hidden" />
            <input asp-for="CampaignName" type="hidden" />
            <input asp-for="TenantId" type="hidden" />
            <input asp-for="TenantName" type="hidden" />
            <div class="form-group">
                <label asp-for="Name" class="control-label col-md-2"></label>
                <div class="col-md-10">
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label col-md-2"></label>
                <div class="col-md-10">
                    <textarea asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="NumberOfVolunteersRequired" class="control-label col-md-2"></label>
                <div class="col-md-10">
                    <input asp-for="NumberOfVolunteersRequired" class="form-control" />
                    <span asp-validation-for="NumberOfVolunteersRequired" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="StartDateTime" class="control-label col-md-2"></label>
                <div class="col-md-10">
                    <input asp-for="StartDateTime" class="form-control datetimepicker" />
                    <span asp-validation-for="StartDateTime" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="EndDateTime" class="control-label col-md-2"></label>
                <div class="col-md-10">
                    <input asp-for="EndDateTime" class="form-control datetimepicker" />
                    <span asp-validation-for="EndDateTime" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="RequiredSkills" class="control-label col-md-2" style="padding-top: 0"></label>
                <div class="col-md-10">
                    <div data-bind="foreach: requiredSkills">
                        <div class="form-inline">
                            <select class="form-control" data-bind="attr: { name: ControlName($index) }, options: $root.availableSkills, optionsText: 'Name', optionsValue: 'Id', value: Id"></select>
                            <span class="fa fa-question-circle" data-bind="visible: Description, tooltip: { title: Description, placement: 'top' }" aria-hidden="true"></span>
                            <a href="#" data-bind="click: $root.deleteSkill" title="Delete required skill">
                                <span class="fa fa-remove" aria-hidden="true"></span>
                                Delete
                            </a>
                        </div>
                    </div>
                    <a href="#" data-bind="click: addSkill" title="Add required skill">
                        <span class="fa fa-plus" aria-hidden="true"></span>
                        Add</a>
                    <span class="label label-danger" data-bind="visible: !requiredSkills.isValid()">@Html.DisplayNameFor(m => m.RequiredSkills) must be unique</span>
                </div>
            </div>

        </div>
        <div class="col-lg-6 pull-right">
            <div id="mapArea" style="width:400px;height:400px"></div>
        </div>

        <h2>Image</h2>
        <div class="form-horizontal col-lg-6 pull-left">
            @if (!string.IsNullOrWhiteSpace(Model.ImageUrl))
            {
                <div class="form-group">
                    <div class="col-md-2">&nbsp;</div>
                    <div class="col-md-10">
                        <img src="@Model.ImageUrl" class="img-thumbnail img-responsive col-md-4" />
                    </div>
                </div>
            }
            <div class="form-group">
                <label asp-for="FileUpload" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input type="file" asp-for="FileUpload" class="control-label col-md-4" />
                    <span asp-validation-for="FileUpload" class="text-danger col-md-12"></span>
                </div>
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-md-12">
            <button type="submit" value="@actionTitle" class="btn btn-default" data-bind="enable: requiredSkills.isValid">@actionTitle</button>
            <a href="@cancelUrl" class="btn btn-default">Cancel</a>        
        </div>
    </div>
</form>


@section scripts {
    <script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>

    <script type="text/javascript">

            System.config({
                baseURL: location.protocol + "//" + location.host + '/ts/'
            });

            System.import('mappingTools.js').then(function (sys) {
                var map = new sys.HTBox.maps.MapRender('mapArea');
                map.zoomToMyLocation();
            });

    </script>
    <script type="text/javascript">
        (function (ko, $, requiredSkills, availableSkills) {

            function AdminActivityViewModel(requiredSkills, availableSkills) {

                function RequiredSkillObservable(skillModel) {
                    var ret = ko.utils.extend({}, skillModel);
                    ret.Id = ko.observable(ret.Id);
                    ret.ControlName = function (index) {
                        return 'RequiredSkills[' + ko.unwrap(index) + '].SkillId';
                    };
                    ret.Description = ko.computed(function () {
                        var skill = availableSkills.filter(function (skill) { return skill.Id === ret.Id(); })[0];
                        return (skill && skill.Description) || "";
                    });
                    return ret;
                }
                requiredSkills = (requiredSkills || []).map(RequiredSkillObservable);

                var self = this;
                this.requiredSkills = ko.observableArray(requiredSkills).uniqueValidator("Id");
                this.availableSkills = ko.observableArray(availableSkills);
                this.addSkill = function() {
                    self.requiredSkills.push(RequiredSkillObservable());
                };
                this.deleteSkill = function(skill) {
                    self.requiredSkills.remove(skill);
                };
            }

            ko.applyBindings(new AdminActivityViewModel(requiredSkills, availableSkills));
        })(ko, $,
            @Json.Serialize(Model.RequiredSkills.Select(rs => new { Id = rs.SkillId })),
            @Json.Serialize(SelectListService.GetSkills()));
    </script>
}

