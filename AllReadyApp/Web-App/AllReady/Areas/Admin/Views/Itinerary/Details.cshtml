@model AllReady.Areas.Admin.ViewModels.Itinerary.ItineraryDetailsViewModel

@{
    ViewData["Title"] = Model.Name;
}

<div class="row">
    <div class="col-12">
        <ol class="breadcrumb">
            <li><a asp-controller="Campaign" asp-action="Index" asp-area="Admin">Campaigns</a></li>
            <li><a asp-controller="Campaign" asp-action="Details" asp-route-id="@Model.CampaignId" asp-area="Admin">@Model.CampaignName</a></li>
            <li><a asp-controller="Event" asp-action="Details" asp-area="Admin" asp-route-id="@Model.EventId">@Model.EventName</a></li>
            <li>@Model.Name</li>
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <h2>
            @Model.Name
            @*<a asp-area="Admin" asp-controller="Itinerary" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-default"><i class="fa fa-edit"></i></a>
                <a asp-area="Admin" asp-controller="Itinerary" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger"><i class="fa fa-trash"></i></a>*@
        </h2>
        <p>Scheduled for @Model.DisplayDate</p>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <h3>
            Team
        </h3>
    </div>
</div>


@if (Model.HasPotentialTeamMembers)
{
    <div class="row">
        <div class="col-md-12">
            <form asp-area="Admin" asp-controller="Itinerary" asp-action="AddTeamMember" method="post">
                <input type="hidden" asp-for="Id" />
                Add team member:
                <select asp-for="SelectedTeamMember"
                        asp-items="Model.PotentialTeamMembers" required></select>
                <button type="submit" class="btn btn-default submit-form">Add</button>
            </form>
        </div>
    </div>
}
else
{
    <p>There are no potential team members to add to this itinerary. There must be volunteers (for a task occuring on the same day as the itinerary) for them to be available to assign to this team.</p>
}

<div class="row">
    <div class="col-md-8">
        <h4>Assigned Team Members</h4>
        @if (Model.TeamMembers.Any())
        {
            <table class="table">
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Email
                    </th>
                    <th>
                        Assigned Task
                    </th>
                    <th></th>
                </tr>
                @foreach (var teamMember in Model.TeamMembers)
                {
                    <tr>
                        <td>
                            <p>@teamMember.DisplayName</p>
                        </td>
                        <td>
                            <p>@teamMember.VolunteerEmail</p>
                        </td>
                        <td>
                            <p>@teamMember.TaskName</p>
                        </td>
                        <td>
                            <a data-toggle="tooltip" data-placement="top" title="Remove from team" asp-action="ConfirmRemoveTeamMember" asp-controller="Itinerary" asp-area="Admin" asp-route-itineraryId="@Model.Id" asp-route-taskSignupId="@teamMember.TaskSignupId" class="btn btn-danger"><span class="fa fa-remove"></span></a>
                        </td>
                    </tr>
                }
            </table>

        }
        else
        {
            <p>There are currently no assigned team members for this itinerary.</p>
        }
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <h3>
            Requests
        </h3>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <a asp-action="SelectRequests" asp-controller="Itinerary" asp-area="Admin" class="btn btn-default">Add Requests</a>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        @if (Model.Requests.Any())
        {
            <table class="table">
                <tr>
                    <th>Name</th>
                    <th>Address</th>
                    <th>City</th>
                    <th>Manage</th>
                    <th>Status</th>
                </tr>
                @foreach (var request in Model.Requests)
                {
                    <tr>
                        <td>
                            <p>@request.Name</p>
                        </td>
                        <td>
                            <p>@request.Address</p>
                        </td>
                        <td>
                            <p>@request.City</p>
                        </td>
                        <td>
                            <form asp-action="MoveRequestUp" asp-controller="Itinerary" asp-area="Admin" asp-route-itineraryId="@Model.Id" asp-route-requestId="@request.Id" class="right-action-btn">
                                <button type="submit" class="btn btn-default submit-form" @if (@request.IsFirst) { <text> disabled</text> }><span class="fa fa-arrow-up"></span></button>
                            </form>
                            <form asp-action="MoveRequestDown" asp-controller="Itinerary" asp-area="Admin" asp-route-itineraryId="@Model.Id" asp-route-requestId="@request.Id" class="right-action-btn">
                                <button type="submit" class="btn btn-default submit-form" @if (@request.IsLast) { <text> disabled</text> }><span class="fa fa-arrow-down"></span></button>
                            </form>

                            <a data-toggle="tooltip" data-placement="top" title="Remove from itinerary" asp-action="ConfirmRemoveRequest" asp-controller="Itinerary" asp-area="Admin" asp-route-itineraryId="@Model.Id" asp-route-requestId="@request.Id" class="btn btn-danger right-action-btn"><span class="fa fa-trash"></span></a>
                        </td>
                        <td>
                            @request.Status
                            @if (request.Status == RequestStatus.Assigned)
                            {
                                <form asp-action="MarkComplete" asp-controller="Itinerary" asp-area="Admin" asp-route-itineraryId="@Model.Id" asp-route-requestId="@request.Id" class="right-action-btn">
                                    <button type="submit" class="btn btn-success submit-form" title="Mark this request as complete"><span class="fa fa-check"></span></button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="MarkIncomplete" asp-controller="Itinerary" asp-area="Admin" asp-route-itineraryId="@Model.Id" asp-route-requestId="@request.Id" class="right-action-btn">
                                    <button type="submit" class="btn btn-warning submit-form" title="Reset this request to incomplete"><span class="fa fa-ban"></span></button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </table>
        }
        else
        {
            <br />
            <p>There are currently no assigned requests for this itinerary</p>
        }
    </div>
</div>

<div id="myMap" style="position:relative;width:100%;height:500px;"></div>

@section scripts {
    <script type='text/javascript'
            src='http://www.bing.com/api/maps/mapcontrol?callback=GetMap'
            async defer></script>
    <script type='text/javascript'>
        function GetMap() {
            renderRequestsMap("myMap", getLocationsFromModelRequests());
        };

        function getLocationsFromModelRequests() {
            var requestData = [];
            @foreach (var request in Model.Requests){
                @:var reqData = {lat:@request.Latitude, long:@request.Longitude, name:'@request.Name', color:'blue'};

                if (request.Status == RequestStatus.Completed)
                {
                    @:reqData.color = 'green';
                            }

                if (request.Status == RequestStatus.Canceled)
                {
                    @:reqData.color = 'red';
                }

                @:requestData.push(reqData)
                        }
            return requestData;
        }
    </script>
}

